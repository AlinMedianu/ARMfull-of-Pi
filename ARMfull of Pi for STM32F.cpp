/****************************************************************************
SHOT - Assignment 2 on the ARM board (STM32F version for assignment) - 2019
						ARMfull of Pi for STM32.cpp
Background: Pi can be approximated by throwing 'darts' at a 2x2 square
with an inscribed circle (the 'dartboard').
This means the circle radius = 1, so the area of the circle = Pi (3.14159...).
The ratio of dart hits in the circle to the total number of throws made
(hits/darts) approaches Pi/4, that is:

  # of hits         area of Circle      Pi * Radius^2     Pi
--------------   =  --------------  =	-------------  =  ---
# darts thrown      area of Square       side * side       4

This can be simulated by generating random x and y 'coordinates' that
fall between 0.0 and 1.0, where the bullseye is considered to be at (0,0).
If the result of (x*x + y*y) is less than 1.0, the dart must be within
the inscribed circle (a hit on the dart board). This is Pythagoras' theorem
in action. (See assignment specification for more information.)
We should also consider darts to the left and below the bullseye -
these would have negative coordinates, but because we square them, they
turn positive so we need only consider the one condition: "< 1.0" and only 
generate positive coordinates, simpler!
Rather than generate random coordinates, you are provided with an array
of pre-generated ones - thus we can know the 'correct' answer, and be
able to check for correct functioning. 
This program is an example of Monte Carlo modelling.

Author: A.Oram, March 2019. Last update: Mar 2019.

The assignment asks you to implement this for the ARM architecture, using
the STM32F Discovery board and employing inline assembly throughout, paying 
attention to performance (that is, make it as fast as you can).
Please use this ARM version of the program as your starting point.

Remember to update all comments and ensure they are relevant and accurate.

Student Name & id: Alin Medianu, b7005327
*****************************************************************************/

#include <stdio.h>
#include "STM32F4xx.h"
#include "stm32f4xx_hal.h" 
#include "SystemClock_Config.h"
using namespace std;

unsigned int hits = 0;			// Number of 'darts' that hit the 'dart board'.
const unsigned int dartsThrown = 1333;	// DO NOT CHANGE! It makes the result predictable.

float x, y;				// Where each 'dart' lands.


float Pi_Approx;							// To be calculated (should = 3.1417854 using data provided).

char Pi_String[] = {'P', 'i', '=','3','.'}; // "Pi=3." Assume "3." is in final result.
char Places[]    = "xxxxx";		// The significant 5 decimal places, to be filled.

// Random 'dart' coordinates are provided in this array...
float darts[dartsThrown][2] = { { 0.00265511,0.155797 },{ 0.8257088,0.08966338 },{ 0.9918821,0.1575366 },{ 0.6800745,0.6452833 },{ 0.8773461,0.1198462 },{ 0.1109348,0.8777428 },{ 0.1692251,0.5829035 },{ 0.7855464,0.4226203 },{ 0.5492721,0.236549 },{ 0.9295022,0.2167425 },{ 0.8657491,0.0598468 },{ 0.5341349,0.001617481 },{ 0.2479934,0.1026948 },{ 0.63567,0.6103702 },{ 0.8712119,0.316599 },{ 0.4483779,0.6936552 },{ 0.4027833,0.340495 },{ 0.6321604,0.04181036 },{ 0.6616413,0.6478469 },{ 0.4762414,0.1587268 },{ 0.5216529,0.9611194 },{ 0.280282,0.2435987 },{ 0.5905331,0.3405255 },{ 0.7137364,0.2377392 },{ 0.6952727,0.8525956 },{ 0.4351634,0.09170812 },{ 0.7054659,0.2247993 },{ 0.7525864,0.9094516 },{ 0.7258828,0.3934751 },{ 0.6058534,0.1255226 },{ 0.1893063,0.3496506 },{ 0.6528825,0.3722648 },{ 0.8811304,0.1908628 },{ 0.7404401,0.1920225 },{ 0.4267403,0.7836848 },{ 0.540849,0.2516862 },{ 0.2730796,0.943907 },{ 0.6362804,0.2154912 },{ 0.6956389,0.5409101 },{ 0.8313242,0.9320658 },{ 0.8620258,0.4317454 },{ 0.975219,0.09210486 },{ 0.4834437,0.6316721 },{ 0.07547227,0.01355022 },{ 0.08539079,0.6271859 },{ 0.9834895,0.7092807 },{ 0.4286325,0.2381665 },{ 0.433607,0.894528 },{ 0.1117893,0.9347209 },{ 0.717185,0.09027375 },{ 0.8870815,0.0155034 },{ 0.7725456,0.478164 },{ 0.7197485,0.5538499 },{ 0.9721671,0.6638386 },{ 0.1234169,0.5172887 },{ 0.3885006,0.004730369 },{ 0.8016907,0.9674978 },{ 0.8193915,0.6585894 },{ 0.1276284,0.7464217 },{ 0.3546556,0.008636738 },{ 0.4928129,0.5550706 },{ 0.7649465,0.6225776 },{ 0.05618457,0.831019 },{ 0.493881,0.4003113 },{ 0.9251076,0.3310038 },{ 0.5352947,0.06790368 },{ 0.2986847,0.8250374 },{ 0.9762566,0.6733299 },{ 0.6060365,0.8077945 },{ 0.4873806,0.2401807 },{ 0.1691031,0.6341441 },{ 0.5417951,0.2363964 },{ 0.4227424,0.9844356 },{ 0.6437575,0.0130314 },{ 0.2222968,0.06640828 },{ 0.3481857,0.87051 },{ 0.2706381,0.4596088 },{ 0.3528245,0.9076815 },{ 0.195349,0.008301035 },{ 0.4433729,0.3107395 },{ 0.3075961,0.6700644 },{ 0.5739616,0.2374645 },{ 0.5740227,0.7251808 },{ 0.8631855,0.9536119 },{ 0.8326365,0.2538224 },{ 0.7876217,0.3774224 },{ 0.784112,0.2872097 },{ 0.3539537,0.6887417 },{ 0.7899106,0.5384991 },{ 0.5305643,0.1586352 },{ 0.007904294,0.1202429 },{ 0.7203894,0.8561968 },{ 0.8976715,0.1544847 },{ 0.5559557,0.3880734 },{ 0.6255989,0.6814478 },{ 0.7979675,0.3282571 },{ 0.4021424,0.7734611 },{ 0.6185492,0.4927824 },{ 0.2815943,0.2601398 },{ 0.05069124,0.7167577 },{ 0.4563433,0.9713431 },{ 0.8848842,0.2896512 },{ 0.5760674,0.9035615 },{ 0.7939695,0.704825 },{ 0.1240577,0.216834 },{ 0.9683523,0.8798791 },{ 0.3812067,0.4676962 },{ 0.0417188,0.5040132 },{ 0.008850368,0.9847407 },{ 0.589404,0.6684774 },{ 0.7827387,0.793054 },{ 0.9797052,0.4364757 },{ 0.507767,0.9938963 },{ 0.8607135,0.5088351 },{ 0.646321,0.005340739 },{ 0.06259346,0.6417127 },{ 0.6903287,0.5708487 },{ 0.1973327,0.9722587 },{ 0.8089236,0.9414045 },{ 0.7370525,0.9088717 },{ 0.8025147,0.1378826 },{ 0.8518631,0.7423627 },{ 0.8951384,0.6998504 },{ 0.7891171,0.6336253 },{ 0.3955199,0.8265023 },{ 0.07449568,0.1348918 },{ 0.7588122,0.3169958 },{ 0.3169958,0.9002655 },{ 0.07983642,0.2154607 },{ 0.8983734,0.7419965 },{ 0.5492721,0.5674917 },{ 0.3287149,0.6886807 },{ 0.9040193,0.1942503 },{ 0.5495163,0.2017884 },{ 0.4027833,0.8902249 },{ 0.9647511,0.2064272 },{ 0.3585925,0.951323 },{ 0.4821619,0.09302042 },{ 0.7589648,0.4390088 },{ 0.3455306,0.3458052 },{ 0.005096591,0.08728294 },{ 0.03888058,0.954558 },{ 0.3021027,0.2584002 },{ 0.04446547,0.2657857 },{ 0.7299112,0.8534196 },{ 0.7356487,0.4297311 },{ 0.5278176,0.5845515 },{ 0.1852779,0.0990936 },{ 0.6229743,0.5146336 },{ 0.1720328,0.5361797 },{ 0.934141,0.2707907 },{ 0.1647084,0.7842952 },{ 0.4820704,0.8379772 },{ 0.5665151,0.06006043 },{ 0.8381298,0.3387249 },{ 0.0003357036,0.02264473 },{ 0.9414655,0.7058626 },{ 0.9163488,0.07593005 },{ 0.8171941,0.653676 },{ 0.3030183,0.3604541 },{ 0.2257759,0.8543351 },{ 0.7829524,0.5909299 },{ 0.7755669,0.7256386 },{ 0.8747215,0.395703 },{ 0.5291604,0.7363506 },{ 0.7019867,0.3144932 },{ 0.635609,0.6351512 },{ 0.9310892,0.110416 },{ 0.01886044,0.5100558 },{ 0.2184515,0.5529343 },{ 0.6543779,0.08380383 },{ 0.9490646,0.3275246 },{ 0.4644917,0.1521043 },{ 0.5470138,0.2287973 },{ 0.3647878,0.5703909 },{ 0.1397137,0.2928861 },{ 0.4915616,0.6959441 },{ 0.8569598,0.02557451 },{ 0.1423078,0.6912748 },{ 0.5457014,0.3824275 },{ 0.4606464,0.5949584 },{ 0.1824397,0.6571245 },{ 0.3961303,0.5664846 },{ 0.7639698,0.934141 },{ 0.971221,0.2109439 },{ 0.9577318,0.262215 },{ 0.3856624,0.3903623 },{ 0.293527,0.2049318 },{ 0.9905393,0.4273202 },{ 0.17716,0.9241005 },{ 0.6620075,0.1074557 },{ 0.5079501,0.4529862 },{ 0.607532,0.3872799 },{ 0.180517,0.3149815 },{ 0.1342204,0.2130802 },{ 0.2531205,0.1445051 },{ 0.4118473,0.3573412 },{ 0.06295969,0.4656514 },{ 0.7608875,0.6793115 },{ 0.0699179,0.2858974 },{ 0.4975127,0.7153538 },{ 0.7104099,0.6599017 },{ 0.8662984,0.005676443 },{ 0.04174932,0.8807642 },{ 0.09204382,0.06390576 },{ 0.4594561,0.4540849 },{ 0.08212531,0.3950011 },{ 0.2673116,0.511887 },{ 0.8103275,0.4686728 },{ 0.3828242,0.8217414 },{ 0.9136631,0.05401776 },{ 0.9582507,0.04834132 },{ 0.533372,0.8215888 },{ 0.1992248,0.4229865 },{ 0.9312418,0.6194037 },{ 0.1616871,0.4775231 },{ 0.9124729,0.3291116 },{ 0.80871,0.999176 },{ 0.5866573,0.7083346 },{ 0.1080966,0.8620563 },{ 0.4978179,0.1256447 },{ 0.4526811,0.8922697 },{ 0.6546525,0.594409 },{ 0.1837214,0.4219794 },{ 0.4926908,0.01162755 },{ 0.4992523,0.6895962 },{ 0.2991729,0.008301035 },{ 0.5284585,0.7416914 },{ 0.1321452,0.3170263 },{ 0.853206,0.9931943 },{ 0.7648854,0.06375317 },{ 0.2582781,0.1019929 },{ 0.6870327,0.8894619 },{ 0.9912106,0.3143712 },{ 0.6935636,0.3081149 },{ 0.3130894,0.9371929 },{ 0.09286782,0.2074648 },{ 0.6219672,0.0933256 },{ 0.06540117,0.8982818 },{ 0.9292886,0.4169134 },{ 0.2037416,0.6189459 },{ 0.9714957,0.8436232 },{ 0.7656789,0.9013947 },{ 0.7374493,0.1534776 },{ 0.6712852,0.7043062 },{ 0.6931059,0.4216437 },{ 0.77575,0.7206336 },{ 0.4848781,0.03360088 },{ 0.4484085,0.7647634 },{ 0.4026307,0.421247 },{ 0.9899289,0.6461379 },{ 0.3835261,0.1756645 },{ 0.9184545,0.4356212 },{ 0.8386181,0.6933195 },{ 0.6564531,0.5305033 },{ 0.08233894,0.01156652 },{ 0.6488235,0.4246345 },{ 0.6473891,0.990112 },{ 0.4441969,0.5898923 },{ 0.2651143,0.4939116 },{ 0.7701651,0.3751945 },{ 0.7933897,0.7349467 },{ 0.1339763,0.3295083 },{ 0.8730735,0.4278695 },{ 0.9800714,0.8546709 },{ 0.5940428,0.9167455 },{ 0.9349956,0.5946531 },{ 0.9525132,0.9284341 },{ 0.1720328,0.4675436 },{ 0.3801996,0.1094089 },{ 0.4260079,0.7462386 },{ 0.1275368,0.002105777 },{ 0.6894742,0.09396649 },{ 0.7811518,0.616596 },{ 0.1221351,0.9618213 },{ 0.6976836,0.2544633 },{ 0.204413,0.2528459 },{ 0.6347545,0.7409894 },{ 0.666036,0.661153 },{ 0.3604846,0.7215796 },{ 0.2216559,0.5900754 },{ 0.5227211,0.1789605 },{ 0.6442152,0.05722221 },{ 0.5592822,0.8274484 },{ 0.2074343,0.4919889 },{ 0.9306009,0.5401471 },{ 0.02865688,0.8318125 },{ 0.4557329,0.4659566 },{ 0.3434858,0.823542 },{ 0.03311258,0.9919126 },{ 0.2431104,0.9363078 },{ 0.5275735,0.2078005 },{ 0.9059725,0.7915891 },{ 0.1041902,0.02880947 },{ 0.8545488,0.5175634 },{ 0.7912229,0.6326792 },{ 0.2691427,0.9332255 },{ 0.5521714,0.3673513 },{ 0.8894009,0.968749 },{ 0.6494339,0.7861263 },{ 0.5346233,0.2289193 },{ 0.5798822,0.9652394 },{ 0.7752312,0.1048616 },{ 0.3640248,0.761681 },{ 0.7850276,0.3410749 },{ 0.469985,0.1660817 },{ 0.9069796,0.4638203 },{ 0.1534165,0.4079409 },{ 0.9628895,0.9770195 },{ 0.4949187,0.9689016 },{ 0.8384045,0.732017 },{ 0.9154637,0.1604663 },{ 0.3747368,0.3773919 },{ 0.4521622,0.4226203 },{ 0.09842219,0.2952055 },{ 0.5747856,0.9989929 },{ 0.8199103,0.9295633 },{ 0.8243965,0.1456648 },{ 0.6327097,0.914304 },{ 0.05581835,0.5292215 },{ 0.3443098,0.9056368 },{ 0.5646229,0.9704276 },{ 0.869808,0.5260475 },{ 0.8802759,0.1900388 },{ 0.6196173,0.3259682 },{ 0.5063631,0.7127598 },{ 0.4127934,0.1689505 },{ 0.3896908,0.5855281 },{ 0.9468978,0.9473861 },{ 0.3987243,0.06665242 },{ 0.3556017,0.03393658 },{ 0.5933714,0.9419233 },{ 0.8857387,0.3763542 },{ 0.5667287,0.6236762 },{ 0.2243721,0.6402173 },{ 0.6407361,0.6896878 },{ 0.5079806,0.3074435 },{ 0.1962035,0.01742607 },{ 0.5439314,0.1359294 },{ 0.919187,0.1705374 },{ 0.2767418,0.8865627 },{ 0.2442396,0.1932737 },{ 0.02914518,0.7242042 },{ 0.7767266,0.4695273 },{ 0.5502793,0.1989502 },{ 0.9741814,0.8026673 },{ 0.4013794,0.213538 },{ 0.8695028,0.3719596 },{ 0.7108982,0.8830531 },{ 0.1156652,0.7227393 },{ 0.8298593,0.6939909 },{ 0.1345866,0.4455092 },{ 0.9188513,0.86816 },{ 0.6501358,0.7010102 },{ 0.9980468,0.3376873 },{ 0.3876461,0.2471999 },{ 0.4911954,0.2380749 },{ 0.2205573,0.1245766 },{ 0.7951598,0.3246864 },{ 0.5454878,0.6555681 },{ 0.9058809,0.2193976 },{ 0.1669668,0.9150364 },{ 0.6324961,0.8937956 },{ 0.4737083,0.3274636 },{ 0.4304025,0.2945952 },{ 0.1863765,0.5476241 },{ 0.3848384,0.5182653 },{ 0.4595782,0.280282 },{ 0.375927,0.4404126 },{ 0.6180303,0.1960814 },{ 0.9569079,0.2067019 },{ 0.3093356,0.5989563 },{ 0.976104,0.4911954 },{ 0.3535264,0.002014222 },{ 0.4746544,0.9287087 },{ 0.0712302,0.2678609 },{ 0.8908353,0.6270638 },{ 0.3719596,0.4694357 },{ 0.1018708,0.165746 },{ 0.3828547,0.1279946 },{ 0.3355205,0.9872432 },{ 0.9002045,0.984283 },{ 0.4814295,0.5869319 },{ 0.4440138,0.9589831 },{ 0.8346507,0.4083682 },{ 0.197821,0.4590594 },{ 0.8016602,0.8496963 },{ 0.6142155,0.685995 },{ 0.6007874,0.2877285 },{ 0.9675588,0.1022065 },{ 0.4878994,0.5257729 },{ 0.6354869,0.7119358 },{ 0.5386517,0.5715812 },{ 0.3901181,0.3128147 },{ 0.5188452,0.151738 },{ 0.4799646,0.3744011 },{ 0.8737449,0.8684347 },{ 0.7846309,0.6999725 },{ 0.3679006,0.4050722 },{ 0.8225349,0.527665 },{ 0.406476,0.6872158 },{ 0.8936735,0.2273934 },{ 0.5696585,0.4046144 },{ 0.1384014,0.2497635 },{ 0.3909726,0.8007752 },{ 0.7933897,0.4830165 },{ 0.9112522,0.1366009 },{ 0.4259773,0.6745811 },{ 0.03897214,0.7339396 },{ 0.428724,0.07333598 },{ 0.2487869,0.005340739 },{ 0.5543687,0.9487594 },{ 0.648854,0.3769036 },{ 0.7735832,0.1431623 },{ 0.94879,0.5090793 },{ 0.2359691,0.3137608 },{ 0.3592944,0.7235633 },{ 0.6159245,0.01995911 },{ 0.9544969,0.04058962 },{ 0.6243782,0.3129978 },{ 0.5284891,0.7346721 },{ 0.9679861,0.9835505 },{ 0.4773705,0.8132267 },{ 0.536729,0.1237831 },{ 0.7378155,0.3261818 },{ 0.1012909,0.1604358 },{ 0.3134861,0.9114048 },{ 0.3015839,0.0143437 },{ 0.4208197,0.4826197 },{ 0.2071291,0.5435957 },{ 0.7849056,0.466628 },{ 0.2315134,0.9259011 },{ 0.1171606,0.4951323 },{ 0.6812952,0.1367534 },{ 0.3060396,0.9581897 },{ 0.7207862,0.1796319 },{ 0.3514817,0.3249916 },{ 0.03451644,0.2241279 },{ 0.5752128,0.6388745 },{ 0.9679251,0.3088473 },{ 0.1373028,0.09183019 },{ 0.4276559,0.7647939 },{ 0.3909116,0.08587909 },{ 0.3234352,0.01580859 },{ 0.1059297,0.6867886 },{ 0.8315989,0.9122898 },{ 0.09323405,0.8765221 },{ 0.2624897,0.253975 },{ 0.2603839,0.5109714 },{ 0.8126469,0.6591387 },{ 0.6303903,0.3889584 },{ 0.9826044,0.4348888 },{ 0.3543504,0.3386334 },{ 0.9425642,0.6064638 },{ 0.2499161,0.7280801 },{ 0.6260872,0.7602771 },{ 0.8959319,0.3054598 },{ 0.8337962,0.8583025 },{ 0.8152714,0.7762077 },{ 0.1279641,0.6789758 },{ 0.7766961,0.02191229 },{ 0.7995849,0.04141362 },{ 0.7471542,0.3689383 },{ 0.6885586,0.469161 },{ 0.5255898,0.8113956 },{ 0.1391034,0.4495987 },{ 0.5898923,0.5959044 },{ 0.8709677,0.9452498 },{ 0.1876888,0.07367168 },{ 0.04770043,0.313303 },{ 0.2028871,0.2265389 },{ 0.323954,0.2898038 },{ 0.8283944,0.7730644 },{ 0.1519822,0.1941588 },{ 0.5770745,0.2608417 },{ 0.1295206,0.01089511 },{ 0.6618854,0.05166784 },{ 0.6699118,0.504532 },{ 0.2761315,0.6052431 },{ 0.7755364,0.02380444 },{ 0.805536,0.9679251 },{ 0.1961425,0.1519517 },{ 0.5031587,0.8732261 },{ 0.7533494,0.8583331 },{ 0.6584674,0.359447 },{ 0.1119724,0.3088168 },{ 0.7918332,0.3112888 },{ 0.7805719,0.9905087 },{ 0.9056063,0.8317209 },{ 0.6207465,0.3067721 },{ 0.3230079,0.8496963 },{ 0.6486404,0.2999054 },{ 0.1464583,0.8711203 },{ 0.4076968,0.6563311 },{ 0.8659932,0.2780236 },{ 0.6955473,0.6516312 },{ 0.1492966,0.08328501 },{ 0.9253517,0.1912595 },{ 0.3450117,0.5463424 },{ 0.9033784,0.6031373 },{ 0.7297281,0.5565355 },{ 0.3035981,0.3383892 },{ 0.03061007,0.1906186 },{ 0.6210822,0.2365795 },{ 0.2547685,0.3498337 },{ 0.8848842,0.5118564 },{ 0.35609,0.883755 },{ 0.9121067,0.1155736 },{ 0.7717826,0.106357 },{ 0.3842585,0.6328013 },{ 0.3587756,0.1112095 },{ 0.5269631,0.3674123 },{ 0.7622608,0.7916196 },{ 0.6746727,0.7738273 },{ 0.7466353,0.9719535 },{ 0.5010224,0.8899198 },{ 0.5208899,0.5568102 },{ 0.196997,0.9285867 },{ 0.589465,0.103946 },{ 0.3770562,0.6836146 },{ 0.1593677,0.727134 },{ 0.9954222,0.9062777 },{ 0.6355479,0.735374 },{ 0.05298013,0.3087863 },{ 0.2352367,0.9149449 },{ 0.3771783,0.3511765 },{ 0.2527543,0.8599505 },{ 0.2544328,0.4673605 },{ 0.005920591,0.258095 },{ 0.1981872,0.8871731 },{ 0.9953002,0.5379803 },{ 0.6324961,0.7100437 },{ 0.3075961,0.7833796 },{ 0.7729118,0.3872799 },{ 0.794763,0.3221229 },{ 0.4862514,0.2683493 },{ 0.05905332,0.8944975 },{ 0.4095584,0.3682363 },{ 0.7768182,0.8081301 },{ 0.1105991,0.01156652 },{ 0.3906369,0.9855648 },{ 0.5702994,0.5099643 },{ 0.7025056,0.3105258 },{ 0.7688223,0.5288553 },{ 0.3981445,0.1793268 },{ 0.6563921,0.3000885 },{ 0.03460799,0.663625 },{ 0.2901395,0.3362834 },{ 0.5217444,0.1905271 },{ 0.4182867,0.8036134 },{ 0.6291391,0.1470687 },{ 0.2926115,0.2087771 },{ 0.549852,0.3140355 },{ 0.990936,0.5571764 },{ 0.05166784,0.5367901 },{ 0.03048799,0.637257 },{ 0.2480239,0.5381939 },{ 0.5537279,0.5888852 },{ 0.5187842,0.2806482 },{ 0.867214,0.4105655 },{ 0.6130253,0.783105 },{ 0.6158635,0.5626698 },{ 0.4644917,0.7993408 },{ 0.3727226,0.3225806 },{ 0.7514573,0.2639241 },{ 0.9263588,0.04785302 },{ 0.7315897,0.9120762 },{ 0.04638813,0.004211554 },{ 0.3838618,0.9792474 },{ 0.00921659,0.9137242 },{ 0.3880734,0.3874325 },{ 0.66451,0.880459 },{ 0.9736625,0.3240455 },{ 0.3237709,0.8489334 },{ 0.1686453,0.6191595 },{ 0.2529984,0.252327 },{ 0.4808191,0.8283944 },{ 0.04950102,0.006195257 },{ 0.5410016,0.4267708 },{ 0.6851406,0.5041047 },{ 0.7410809,0.02038636 },{ 0.4965361,0.7717521 },{ 0.3971984,0.9816279 },{ 0.9041108,0.4351329 },{ 0.4695883,0.4146855 },{ 0.1405377,0.6598407 },{ 0.3702506,0.857448 },{ 0.7706534,0.7169713 },{ 0.8899808,0.6255989 },{ 0.2830287,0.3323466 },{ 0.7754143,0.206183 },{ 0.5358135,0.4753563 },{ 0.9881588,0.6054872 },{ 0.3365276,0.7432173 },{ 0.176458,0.05890072 },{ 0.9385968,0.9973754 },{ 0.3912778,0.007995849 },{ 0.734611,0.408063 },{ 0.5774407,0.7514878 },{ 0.9284951,0.5633411 },{ 0.8717307,0.6763512 },{ 0.4671163,0.7986999 },{ 0.2386853,0.4752648 },{ 0.01321451,0.4038514 },{ 0.4757836,0.2565996 },{ 0.2403638,0.8626057 },{ 0.1185339,0.9531236 },{ 0.2314829,0.7819757 },{ 0.27781,0.9360027 },{ 0.2622761,0.6675009 },{ 0.9395428,0.2399365 },{ 0.7504807,0.2000183 },{ 0.7589648,0.3061006 },{ 0.6524857,0.1709342 },{ 0.8799707,0.6486404 },{ 0.08850367,0.7318034 },{ 0.811182,0.3513291 },{ 0.4774621,0.1146886 },{ 0.8901334,0.8008362 },{ 0.962859,0.4795068 },{ 0.3661,0.5619984 },{ 0.4108402,0.04440443 },{ 0.6339,0.8025758 },{ 0.7621998,0.155858 },{ 0.6488845,0.1725822 },{ 0.01840266,0.4541459 },{ 0.05505539,0.5452742 },{ 0.6444899,0.7910703 },{ 0.05722221,0.5253151 },{ 0.6683859,0.0557268 },{ 0.5686514,0.1313517 },{ 0.2594379,0.5648366 },{ 0.665212,0.558092 },{ 0.06634724,0.1735282 },{ 0.8774987,0.4251228 },{ 0.09622486,0.7634816 },{ 0.3521531,0.4179815 },{ 0.4158147,0.2638325 },{ 0.4134953,0.7284463 },{ 0.4562517,0.8619342 },{ 0.5567186,0.1994079 },{ 0.2028565,0.5594043 },{ 0.4040956,0.5816218 },{ 0.05056917,0.7306741 },{ 0.6555071,0.8074892 },{ 0.606769,0.8390759 },{ 0.5637379,0.6891385 },{ 0.2227546,0.9679556 },{ 0.9672231,0.9462874 },{ 0.5348674,0.3221229 },{ 0.4100772,0.9704886 },{ 0.7965636,0.3565783 },{ 0.3815119,0.2320627 },{ 0.282815,0.6880398 },{ 0.2056337,0.7358318 },{ 0.5482956,0.4462416 },{ 0.6128422,0.4316538 },{ 0.8197577,0.2208624 },{ 0.5240638,0.9869075 },{ 0.3048799,0.2602924 },{ 0.07934812,0.8256783 },{ 0.6983856,0.07876828 },{ 0.4415723,0.8427381 },{ 0.6662496,0.127842 },{ 0.4069033,0.6967681 },{ 0.590228,0.6886502 },{ 0.3533128,0.09045686 },{ 0.3530076,0.6409192 },{ 0.5578784,0.9429609 },{ 0.4457533,0.2655416 },{ 0.4148686,0.8611103 },{ 0.1792047,0.7362896 },{ 0.5851009,0.8159429 },{ 0.279458,0.4573199 },{ 0.6085391,0.430311 },{ 0.6499222,0.9026765 },{ 0.010712,0.7842647 },{ 0.5801569,0.1139866 },{ 0.4348582,0.1441084 },{ 0.183874,0.5126499 },{ 0.830256,0.5217444 },{ 0.3459883,0.1825007 },{ 0.2289499,0.469924 },{ 0.9612415,0.2797937 },{ 0.1412702,0.02059999 },{ 0.7446821,0.7260964 },{ 0.1019318,0.1719108 },{ 0.3960997,0.8406628 },{ 0.3975646,0.8299814 },{ 0.3986938,0.0687582 },{ 0.5073397,0.6122928 },{ 0.2342601,0.4617145 },{ 0.2877285,0.4188055 },{ 0.2953276,0.06506546 },{ 0.4325083,0.1765801 },{ 0.2758568,0.8715781 },{ 0.2394177,0.6646016 },{ 0.3219092,0.4943998 },{ 0.2149724,0.8248848 },{ 0.7229835,0.2178411 },{ 0.5479904,0.4662923 },{ 0.4259468,0.5806451 },{ 0.9839473,0.7671743 },{ 0.1523179,0.1492355 },{ 0.1305277,0.4828028 },{ 0.4003113,0.6365856 },{ 0.7266152,0.2645344 },{ 0.1129185,0.02264473 },{ 0.9047822,0.9962157 },{ 0.2933134,0.8336741 },{ 0.9796747,0.5546434 },{ 0.348735,0.2351146 },{ 0.7929014,0.9000214 },{ 0.4440138,0.09625538 },{ 0.1455733,0.9026459 },{ 0.646321,0.6808375 },{ 0.3505051,0.8124332 },{ 0.1421247,0.1214026 },{ 0.4341258,0.7769707 },{ 0.3075045,0.3332011 },{ 0.02063051,0.3147374 },{ 0.91348,0.5232704 },{ 0.4286935,0.149968 },{ 0.2470473,0.9519944 },{ 0.01245155,0.3145238 },{ 0.4298837,0.1025422 },{ 0.2777795,0.9240089 },{ 0.7152318,0.9150975 },{ 0.8053224,0.5338603 },{ 0.04455702,0.2412183 },{ 0.5113071,0.4818262 },{ 0.6455886,0.1758476 },{ 0.2775964,0.1227454 },{ 0.9520859,0.4219489 },{ 0.4820704,0.3626209 },{ 0.6275521,0.3449202 },{ 0.4606464,0.3973205 },{ 0.9736015,0.8726463 },{ 0.4322031,0.06280709 },{ 0.5040742,0.8973357 },{ 0.9176916,0.7031159 },{ 0.9670095,0.3358867 },{ 0.1844844,0.9616992 },{ 0.594348,0.5044709 },{ 0.747673,0.4033326 },{ 0.8621479,0.9637745 },{ 0.4588153,0.3721732 },{ 0.5413068,0.4912564 },{ 0.2142399,0.9922483 },{ 0.3208716,0.3369549 },{ 0.8135625,0.7168798 },{ 0.7845393,0.4180425 },{ 0.9996643,0.3332926 },{ 0.02224799,0.6097293 },{ 0.2119816,0.8285165 },{ 0.6577044,0.7876827 },{ 0.08359019,0.02255318 },{ 0.5728019,0.7790765 },{ 0.2137211,0.375927 },{ 0.1112705,0.8775597 },{ 0.2471389,0.8768578 },{ 0.04144414,0.0794702 },{ 0.7911313,0.4148381 },{ 0.06030457,0.696646 },{ 0.2017273,0.5471053 },{ 0.1198157,0.5024262 },{ 0.7705924,0.06350902 },{ 0.3568529,0.0674459 },{ 0.342967,0.2567217 },{ 0.9074984,0.4408399 },{ 0.8991363,0.3036897 },{ 0.3878292,0.8332774 },{ 0.1295511,0.6647236 },{ 0.3218177,0.4586322 },{ 0.5356609,0.9062777 },{ 0.297586,0.1898557 },{ 0.08719138,0.85403 },{ 0.133549,0.1853694 },{ 0.9674672,0.4820704 },{ 0.8356273,0.1427656 },{ 0.4375744,0.4448378 },{ 0.626606,0.3355815 },{ 0.3515122,0.6577349 },{ 0.8290963,0.08932768 },{ 0.3521836,0.8328806 },{ 0.8833277,0.8535417 },{ 0.2810144,0.3763542 },{ 0.2806482,0.5254982 },{ 0.8312327,0.5526597 },{ 0.6947844,0.1825007 },{ 0.9767144,0.3234046 },{ 0.0910062,0.8781396 },{ 0.2075259,0.7657704 },{ 0.09573656,0.659566 },{ 0.1032746,0.4774316 },{ 0.4065676,0.4618061 },{ 0.2755211,0.8741417 },{ 0.5249489,0.03491317 },{ 0.2108219,0.7858516 },{ 0.5921506,0.5610217 },{ 0.04507584,0.2582781 },{ 0.6102176,0.1165807 },{ 0.8012329,0.9656667 },{ 0.8286386,0.6371349 },{ 0.120426,0.1407819 },{ 0.5785699,0.5397809 },{ 0.01947081,0.4293954 },{ 0.3355205,0.66039 },{ 0.704062,0.5742668 },{ 0.2915128,0.6615192 },{ 0.970336,0.3357646 },{ 0.2186956,0.5670339 },{ 0.2255928,0.5549486 },{ 0.9050264,0.5802179 },{ 0.6593524,0.7654958 },{ 0.9431745,0.8411817 },{ 0.5958129,0.2607501 },{ 0.1547899,0.2800684 },{ 0.5596179,0.02203436 },{ 0.4304025,0.2220832 },{ 0.08539079,0.414655 },{ 0.2664571,0.9007843 },{ 0.803003,0.05746635 },{ 0.7813654,0.5359355 },{ 0.8290048,0.7729423 },{ 0.4906461,0.1318705 },{ 0.9965819,0.02313303 },{ 0.6238593,0.6530045 },{ 0.9540391,0.7385479 },{ 0.2631001,0.7323832 },{ 0.6640828,0.945616 },{ 0.08545183,0.5697196 },{ 0.3346049,0.09927671 },{ 0.9899899,0.1752678 },{ 0.3122654,0.5272073 },{ 0.3909116,0.6155583 },{ 0.9704581,0.8911099 },{ 0.4579302,0.4171575 },{ 0.1223182,0.07211524 },{ 0.08499405,0.7852412 },{ 0.9908139,0.3864254 },{ 0.8691671,0.7925657 },{ 0.2662435,0.5368511 },{ 0.8800623,0.1955931 },{ 0.2833644,0.2073733 },{ 0.5018159,0.03366192 },{ 0.848384,0.7062594 },{ 0.128666,0.667745 },{ 0.7481002,0.5641652 },{ 0.9949339,0.4147771 },{ 0.4716025,0.4940947 },{ 0.9213843,0.4340342 },{ 0.1762139,0.618244 },{ 0.2586139,0.0217597 },{ 0.4289376,0.3690909 },{ 0.8092593,0.9701224 },{ 0.7541734,0.9706107 },{ 0.009338664,0.1467635 },{ 0.5198523,0.9054842 },{ 0.1515854,0.9519028 },{ 0.1923276,0.2751549 },{ 0.930021,0.8076113 },{ 0.4917142,0.4588153 },{ 0.08865627,0.3376873 },{ 0.4790796,0.976989 },{ 0.4550005,0.3923154 },{ 0.1061434,0.9669179 },{ 0.1391644,0.5752128 },{ 0.259621,0.1754204 },{ 0.1805475,0.428724 },{ 0.8305002,0.8754234 },{ 0.4230476,0.9335307 },{ 0.8400525,0.6126896 },{ 0.8997772,0.478927 },{ 0.154088,0.1887875 },{ 0.5090793,0.9602039 },{ 0.8159734,0.7868893 },{ 0.2627338,0.1589099 },{ 0.5299539,0.6459548 },{ 0.8875698,0.06317332 },{ 0.3266091,0.190405 },{ 0.06189154,0.2829981 },{ 0.9408246,0.02102725 },{ 0.06799524,0.2180242 },{ 0.9338053,0.6732383 },{ 0.1419111,0.1333659 },{ 0.0908536,0.5493332 },{ 0.301645,0.7997985 },{ 0.1255837,0.9310587 },{ 0.9351177,0.8547014 },{ 0.2219611,0.4779198 },{ 0.9292886,0.5400861 },{ 0.4454787,0.1187475 },{ 0.6213568,0.9735709 },{ 0.5550706,0.7415082 },{ 0.35374,0.6090884 },{ 0.2460707,0.5886105 },{ 0.91348,0.04306162 },{ 0.3566698,0.7632374 },{ 0.6378064,0.822718 },{ 0.0680868,0.753502 },{ 0.4672078,0.4123356 },{ 0.6302988,0.3803217 },{ 0.7265542,0.9744255 },{ 0.6443373,0.07531968 },{ 0.9164708,0.1209754 },{ 0.4326609,0.8951689 },{ 0.2952361,0.2923978 },{ 0.5284585,0.1782281 },{ 0.5334635,0.9188207 },{ 0.815363,0.250618 },{ 0.221839,0.02157659 },{ 0.3489791,0.0867336 },{ 0.5139012,0.4101382 },{ 0.3910947,0.33137 },{ 0.6847743,0.1306803 },{ 0.6881618,0.5893735 },{ 0.8870815,0.3234657 },{ 0.525132,0.389172 },{ 0.885525,0.1441084 },{ 0.5858943,0.7265236 },{ 0.05105747,0.906003 },{ 0.151677,0.5940428 },{ 0.3962829,0.09921567 },{ 0.6685995,0.4040346 },{ 0.9328898,0.4431288 },{ 0.2153996,0.7097079 },{ 0.132664,0.628071 },{ 0.9031953,0.1314432 },{ 0.7735832,0.9029511 },{ 0.7376629,0.8947111 },{ 0.951323,0.1646779 },{ 0.9758904,0.8851283 },{ 0.5385602,0.7058931 },{ 0.5080721,0.6278878 },{ 0.8725242,0.276986 },{ 0.2962432,0.09665212 },{ 0.9524827,0.6191595 },{ 0.4007691,0.7593921 },{ 0.9280068,0.1238746 },{ 0.6259346,0.7661672 },{ 0.1596728,0.7762383 },{ 0.3159581,0.6863307 },{ 0.6334116,0.03714103 },{ 0.3327433,0.7004609 },{ 0.009155553,0.8215888 },{ 0.7462691,0.6536149 },{ 0.08612324,0.2286447 },{ 0.2693869,0.8764306 },{ 0.9648122,0.1799371 },{ 0.9680471,0.1796625 },{ 0.6878262,0.6222724 },{ 0.2775964,0.9292581 },{ 0.6404614,0.4510941 },{ 0.8579058,0.6072878 },{ 0.4921415,0.8109683 },{ 0.3167211,0.7658315 },{ 0.9602649,0.9291666 },{ 0.3341166,0.7794122 },{ 0.1773736,0.1387371 },{ 0.2179632,0.3027741 },{ 0.9435713,0.247322 },{ 0.422956,0.8398389 },{ 0.6441237,0.9078036 },{ 0.06308176,0.3300577 },{ 0.1152989,0.1472823 },{ 0.9501632,0.159032 },{ 0.2378918,0.7104709 },{ 0.1883602,0.4989166 },{ 0.5410321,0.3737602 },{ 0.8572649,0.385052 },{ 0.59682,0.886288 },{ 0.8135014,0.4354686 },{ 0.4871365,0.694113 },{ 0.1431013,0.6190374 },{ 0.1242409,0.1039766 },{ 0.2954802,0.9787591 },{ 0.7058931,0.04272591 },{ 0.4301279,0.7162694 },{ 0.08651997,0.06857509 },{ 0.007599109,0.544145 },{ 0.3457747,0.7907346 },{ 0.1558885,0.7117832 },{ 0.33549,0.3533433 },{ 0.843318,0.6115909 },{ 0.4864956,0.1403241 },{ 0.3893857,0.3712271 },{ 0.65627,0.356914 },{ 0.3449812,0.338847 },{ 0.2991729,0.6445814 },{ 0.2724998,0.8666341 },{ 0.7398602,0.3852656 },{ 0.4580523,0.2998749 },{ 0.8315989,0.851619 },{ 0.08636738,0.5771355 },{ 0.7807245,0.8586993 },{ 0.9098178,0.3480331 },{ 0.4181646,0.07437361 },{ 0.9428999,0.01486251 },{ 0.6996063,0.6439406 },{ 0.2132939,0.6043885 },{ 0.7153233,0.2852565 },{ 0.1009552,0.8756676 },{ 0.9911191,0.5112461 },{ 0.2961821,0.5709097 },{ 0.3614612,0.1352886 },{ 0.9080783,0.2147893 },{ 0.1962951,0.7162389 },{ 0.7547837,0.3689383 },{ 0.2622761,0.09894101 },{ 0.3665578,0.7478866 },{ 0.0003967406,0.7070833 },{ 0.7328715,0.1023286 },{ 0.5007172,0.7436751 },{ 0.3250526,0.2765587 },{ 0.955504,0.9565417 },{ 0.4255806,0.3457137 },{ 0.8723411,0.1241493 },{ 0.2949919,0.2393567 },{ 0.8281503,0.9187902 },{ 0.2083804,0.7578967 },{ 0.04535051,0.3022553 },{ 0.8919035,0.387402 },{ 0.5719779,0.1117588 },{ 0.3909726,0.8200018 },{ 0.3458663,0.9911496 },{ 0.9017609,0.5851619 },{ 0.9255348,0.3239845 },{ 0.596118,0.6988739 },{ 0.1678518,0.3251137 },{ 0.9725944,0.7363811 },{ 0.6346324,0.9465926 },{ 0.7636036,0.2352672 },{ 0.008545183,0.7540208 },{ 0.930723,0.8347117 },{ 0.3003632,0.4304025 },{ 0.779107,0.05722221 },{ 0.1284219,0.06268502 },{ 0.7222205,0.1395611 },{ 0.8515275,0.8680379 },{ 0.7282327,0.8182928 },{ 0.8365123,0.5157018 },{ 0.9793389,0.4769433 },{ 0.6422315,0.7008271 },{ 0.7752312,0.5607471 },{ 0.4003113,0.1266518 },{ 0.2118595,0.6650593 },{ 0.1747795,0.5508896 },{ 0.6670126,0.2039552 },{ 0.581225,0.05294961 },{ 0.6235847,0.06521805 },{ 0.4471572,0.1781365 },{ 0.8620868,0.1576891 },{ 0.7945494,0.1150853 },{ 0.5536057,0.2577288 },{ 0.925779,0.5624256 },{ 0.2843104,0.06036561 },{ 0.8946196,0.4413892 },{ 0.5428938,0.8424024 },{ 0.1429792,0.1103244 },{ 0.7020783,0.6422926 },{ 0.5850704,0.237373 },{ 0.02554399,0.3645436 },{ 0.9199194,0.9874874 },{ 0.7318339,0.7139195 },{ 0.4539018,0.6804101 },{ 0.6453139,0.3657338 },{ 0.2140568,0.575396 },{ 0.4673299,0.2792444 },{ 0.6337473,0.9392071 },{ 0.1968444,0.5594348 },{ 0.5918455,0.05352946 },{ 0.7333903,0.7740715 },{ 0.08679464,0.3182775 },{ 0.1922971,0.131962 },{ 0.3264565,0.1064486 },{ 0.9647816,0.4291207 },{ 0.515305,0.527604 },{ 0.05261391,0.1681875 },{ 0.1202734,0.7556383 },{ 0.7101963,0.758568 },{ 0.8963591,0.07705924 },{ 0.9239174,0.2023072 },{ 0.4528337,0.3166906 },{ 0.7611011,0.1730705 },{ 0.6423841,0.7959838 },{ 0.1189917,0.893643 },{ 0.553148,0.4813379 },{ 0.9056978,0.7183447 },{ 0.3859981,0.4776757 },{ 0.1836604,0.8273568 },{ 0.9975891,0.524369 },{ 0.3077181,0.9380779 },{ 0.3904843,0.6490066 },{ 0.5881832,0.4404431 },{ 0.932432,0.6358227 },{ 0.5105746,0.8625447 },{ 0.5846125,0.4648579 },{ 0.04361095,0.07223731 },{ 0.921598,0.3778497 },{ 0.06588946,0.1216773 },{ 0.2230293,0.7277139 },{ 0.4433119,0.1403546 },{ 0.4192633,0.2668844 },{ 0.7878353,0.1834773 },{ 0.1713614,0.03213599 },{ 0.4293039,0.4414808 },{ 0.8675191,0.480575 },{ 0.631611,0.717246 },{ 0.8163396,0.03439436 },{ 0.5836665,0.5770745 },{ 0.4189886,0.6898709 },{ 0.1976684,0.08175909 },{ 0.60094,0.8469497 },{ 0.24485,0.5041353 },{ 0.2845851,0.0159917 },{ 0.8605304,0.9387799 },{ 0.1845759,0.5578173 },{ 0.9494003,0.2110965 },{ 0.7060763,0.1126438 },{ 0.5226295,0.9911191 },{ 0.2282785,0.8754539 },{ 0.497879,0.5185705 },{ 0.5537279,0.3727531 },{ 0.9932554,0.8460036 },{ 0.8048341,0.8979461 },{ 0.6467177,0.005035554 },{ 0.5490585,0.2607196 },{ 0.9924314,0.003387555 },{ 0.4338511,0.007721183 },{ 0.4244209,0.05774102 },{ 0.1124302,0.7694632 },{ 0.7799615,0.9693289 },{ 0.7420881,0.8910794 },{ 0.07293924,0.04840235 },{ 0.8357189,0.002197333 },{ 0.4091311,0.493881 },{ 0.7484359,0.682638 },{ 0.614185,0.6340221 },{ 0.5798822,0.8798791 },{ 0.6057619,0.934904 },{ 0.774163,0.2349315 },{ 0.04129154,0.1826533 },{ 0.1978515,0.972747 },{ 0.272042,0.7458724 },{ 0.9781793,0.5128941 },{ 0.135258,0.3241981 },{ 0.8819239,0.4577776 },{ 0.6154668,0.08951079 },{ 0.5168615,0.1134678 },{ 0.9060946,0.6261788 },{ 0.1365093,0.2005066 },{ 0.9027375,0.5759453 },{ 0.3296304,0.910062 },{ 0.6593524,0.3945433 },{ 0.375927,0.9621266 },{ 0.8386181,0.1257973 },{ 0.5488144,0.8220466 },{ 0.6875515,0.5993835 },{ 0.1468246,0.7313761 },{ 0.5699637,0.9588305 },{ 0.5348369,0.7094333 },{ 0.5865963,0.925779 },{ 0.9760735,0.1817988 },{ 0.3145543,0.7069002 },{ 0.5365459,0.3922544 },{ 0.197058,0.9495529 },{ 0.8431349,0.2536699 },{ 0.6149175,0.6524857 },{ 0.9761345,0.7951903 },{ 0.1707205,0.4380627 },{ 0.2780236,0.8609577 },{ 0.2173528,0.09179968 },{ 0.3594775,0.2170782 },{ 0.1619007,0.7759941 },{ 0.08377331,0.7234107 },{ 0.5758843,0.8231452 },{ 0.811243,0.7254249 },{ 0.6439101,0.5160375 },{ 0.6841944,0.3236183 },{ 0.980987,0.760155 },{ 0.2349315,0.6758629 },{ 0.3504135,0.05487228 },{ 0.09640797,0.9891049 },{ 0.3135472,0.6701254 },{ 0.0982696,0.3568834 },{ 0.3418989,0.4337901 },{ 0.5286111,0.09906308 },{ 0.4239631,0.0372631 },{ 0.8431349,0.759209 },{ 0.6970122,0.2644429 },{ 0.6026796,0.4168523 },{ 0.1357463,0.05099643 },{ 0.9208044,0.4703208 },{ 0.8289437,0.7798395 },{ 0.2018799,0.546556 },{ 0.874752,0.7192297 },{ 0.4521317,0.6940824 },{ 0.4269845,0.009796442 },{ 0.9435102,0.5153661 },{ 0.9227271,0.1065706 },{ 0.5127109,0.3951842 },{ 0.02273629,0.08212531 },{ 0.2763451,0.4804529 },{ 0.2964873,0.6977752 },{ 0.04293954,0.5687429 },{ 0.1817682,0.6480606 },{ 0.2037721,0.5609607 },{ 0.2517777,0.8858303 },{ 0.383343,0.6348155 },{ 0.3196509,0.4331797 },{ 0.6309397,0.7951903 },{ 0.412122,0.5853755 },{ 0.434492,0.9578844 },{ 0.1437422,0.9132359 },{ 0.3377178,0.2224494 },{ 0.5226905,0.9709159 },{ 0.4423658,0.4913785 },{ 0.7194128,0.1148106 },{ 0.57622,0.09027375 },{ 0.829371,0.3401593 },{ 0.4084597,0.5473495 },{ 0.1613514,0.5413068 },{ 0.2935576,0.186285 },{ 0.08239998,0.102237 },{ 0.1248817,0.690817 },{ 0.9503159,0.223426 },{ 0.9794305,0.2953581 },{ 0.1656239,0.8910489 },{ 0.8345897,0.7594531 },{ 0.8740501,0.8952299 },{ 0.1387066,0.7814875 },{ 0.3501083,0.8033997 },{ 0.5163732,0.007965331 },{ 0.5941648,0.2947478 },{ 0.3893552,0.2950224 },{ 0.173162,0.7625355 },{ 0.7953429,0.3778192 },{ 0.8372448,0.5899228 },{ 0.1847591,0.6046022 },{ 0.94232,0.006164739 },{ 0.4777062,0.8915372 },{ 0.2113102,0.929136 },{ 0.1615955,0.5541246 },{ 0.8640095,0.6999725 },{ 0.7112339,0.172338 },{ 0.6473891,0.1171911 },{ 0.1123691,0.1448103 },{ 0.7977538,0.6755883 },{ 0.7701651,0.08883938 },{ 0.4656209,0.4161809 },{ 0.5832393,0.7424238 },{ 0.6348765,0.2942289 },{ 0.4655294,0.524308 },{ 0.06698813,0.4709006 },{ 0.09637745,0.4089175 },{ 0.3024384,0.4347972 },{ 0.1803339,0.2713096 },{ 0.2494583,0.3600879 },{ 0.9980773,0.3598132 },{ 0.3922849,0.6071047 },{ 0.5295267,0.0512711 },{ 0.1495712,0.7718131 },{ 0.9308146,0.5461593 },{ 0.4146855,0.1902219 },{ 0.6453444,0.6590167 },{ 0.80871,0.3044527 },{ 0.931486,0.3613392 },{ 0.6775414,0.7958922 },{ 0.08728294,0.2321848 },{ 0.3646046,0.8925748 },{ 0.1536912,0.4734642 },{ 0.7900326,0.7565233 },{ 0.3775445,0.6459243 },{ 0.8677328,0.3573717 },{ 0.2155828,0.7820673 },{ 0.7917112,0.7387005 },{ 0.1608325,0.03222755 },{ 0.7226478,0.08285775 },{ 0.1723685,0.5003204 },{ 0.9062777,0.481399 },{ 0.9898373,0.4247566 },{ 0.7544786,0.8163396 },{ 0.1140477,0.3620716 },{ 0.9205908,0.6592914 },{ 0.7350688,0.5280312 },{ 0.900235,0.594348 },{ 0.3881649,0.953795 },{ 0.1884823,0.8709677 },{ 0.6203498,0.6122013 },{ 0.5253151,0.7933286 },{ 0.4472793,0.1716056 },{ 0.2597736,0.7521897 },{ 0.8827479,0.5324565 },{ 0.3648793,0.3055208 },{ 0.3216651,0.8034913 },{ 0.1340373,0.2143315 },{ 0.05774102,0.8736534 },{ 0.09024324,0.8397473 },{ 0.717185,0.2359996 },{ 0.1396222,0.8075808 },{ 0.8895535,0.2197333 },{ 0.5002594,0.3469954 },{ 0.7375714,0.2866299 },{ 0.4375439,0.2090213 },{ 0.8660542,0.5483871 },{ 0.3377178,0.5714591 },{ 0.2323985,0.1606189 },{ 0.1502731,0.8363292 },{ 0.3790704,0.7504196 },{ 0.7308878,0.7261879 },{ 0.7696158,0.5330363 },{ 0.1158177,0.5856197 },{ 0.5095676,0.2744835 },{ 0.259682,0.2938322 },{ 0.2331919,0.755913 },{ 0.2665792,0.6950591 },{ 0.437727,0.8964202 },{ 0.6473586,0.9525743 },{ 0.04580828,0.1900693 },{ 0.6331065,0.7329325 },{ 0.4781335,0.6138493 },{ 0.07663198,0.6266671 },{ 0.01651051,0.6623737 },{ 0.9732047,0.7110813 },{ 0.7398908,0.6658834 },{ 0.1313211,0.6624653 },{ 0.8133183,0.04763939 },{ 0.0257271,0.3230079 },{ 0.4118778,0.6772973 },{ 0.3626209,0.1290933 },{ 0.06085391,0.9756768 },{ 0.3895383,0.3073519 } };
;  // (x,y) coords of 'dart' locations. Should give result shown above. DO NOT CHANGE!
	
//*************** SysTick_Handler - Tick Count ISR *********************************************
//*** Note that this routine supercedes the 'weak' one to be found in startup_stm32f407xx.s. ***

volatile unsigned Ticks = 0; 	// Initialise a global tick counter.
					// 'Ticks' can be read directly in the program code.
extern "C" void SysTick_Handler(void) { 	// SysTick Interrupt Service Routine (ISR) - Do not change!
		Ticks++;		// Increment global tick accumulator on each SysTick interrupt.
					// See 'StartTicking' for periodicity of interrupts.
}//*********************************************************************************************

//*************** Start Ticking *****************************************************
//*** This should be called before attempting to read the global 'Ticks' value.
//*** Note for the STM32F4, SystemCoreClock = 16,000,000 Hz;
#define micro 1000000U
#define milli 1000U
void startTicking ()
{
	if (SysTick_Config(SystemCoreClock/micro)) // Set interrupts to occur every microsecond
		printf("Tick Config failed."); 	// Some very basic error handling 
}//***********************************************************************************

void ItoA_Magic(int, char*); // see end of listing

int main(void)
{ 
	////////////////// DO NOT DELETE THESE CALLS ////////////////////////////////////////
  SystemClock_Config();      // Configure the System Clock 
	HAL_Init();                // Initialize the HAL Library (Hardware Abstraction Layer)
	startTicking();            // Set off the SysTick interrupts
	/////////////////////////////////////////////////////////////////////////////////////
	void ItoA_Magic(int, char*);
	printf ("Pi value produced is (should be Pi=3.14178):\n");

	//************ START OF TIMED PARTS **************************************************************
	Ticks = 0;
	hits = 0; 
	for (int i = 0; i < dartsThrown; ++i)
	{	
		x = darts[i][0];
		y = darts[i][1];
		if (x*x + y*y <= 1.0f) 
			++hits;		// Did the dart hit the circle? If so count it.
	}
	// All done, calculate Pi by multiplying by 4 and dividing by number of darts thrown...
	Pi_Approx = (4.0f * (float)hits) / (float)dartsThrown;
	printf("Time taken to calculate Pi (original): %d\n", Ticks);
	Ticks = 0;
	unsigned r0 = 10664;							// used as the loop exit condition, initially set to dartsThrown * 8
	unsigned r1;                      // used as the address to the arrays'elements
	unsigned r2 = 0;                  // the number of darts that hit the board and the first 5 digits of pi after the dot
	unsigned r3;                      // used alongside r8 to calculate the character that gets written into the char array
	const float s0 = 1.0f;            // used to determine if the dart hit the board
	const float s1 = 0.00300075f;			// used to transform the number of darts that hit the board into a pi approximation (approx. 4 / dartsThrown)
	const float s2 = 3.0f;            // used to remove the 3 from the pi approximation
	const float s3 = 100000.0f;       // used to scale the pi aproximation to a 5 digit number, after removing the 3
	float s4;                         // used as x in the pi approximation
	float s5;                         // used as y in the pi approximation
	__asm
	{
								MOV 						r1, darts									// get the address of the coordinates array
								ADD 						r0, r1                    // r6 is now the address pointing to the next byte after the end of the array
		PIFOR:			VLDR.F32 				s4, [r1]                  // s4 is the x coordinate
								VLDR.F32 				s5, [r1,4]                // s5 is the y coordinate
								ADD 						r1, 8                    	// go to the next x coordinate
								VMUL.F32 				s4, s4                    // square the x coordinate
								VMLA.F32  			s4, s5, s5	              // square the y coordinate and add it to the squared x coordinate
								VCMP.F32 				s4, s0                    // change the float flags according to the comparison of x^2+y^2 with 1
								VMRS 						APSR_nzcv, FPSCR          // change the core flags to match the float flags
								IT 							LE 		                    // condition the next instruction
								ADDLE 					r2, 1                    	// increment the number of darts that hit the board
								CMP 						r1, r0                    // if r7 is still pointing inside the array,
								BLT 						PIFOR                     // loop again
								VMOV.F32 				Pi_Approx, r2             // give the bit pattern of the number of darts that hit the board to the final approximation
								VCVT.F32.U32 		Pi_Approx, Pi_Approx      // convert it to a single-precision floating point number
								VMUL.F32				Pi_Approx, s1             // transform the result into the actual pi approximation
	}
	printf("Time taken to calculate Pi: %d\n", Ticks);
	//***************************************************************************
	Ticks = 0;
	// We now need to display the result.
	// Could use printf to produce it... but, it's slow.
	printf("Pi=%f\n", Pi_Approx);
	printf("Time taken by printf to display Pi: %d\n", Ticks);
	// So, convert result to a string (to avoid slow printf), use 5 sig digits after decimal point.
	Ticks = 0;
	int Pi_Places = (int)((Pi_Approx - 3.0F) * 100000.0F);
	ItoA_Magic(Pi_Places, Places);
	puts (Pi_String);			// As the strings concatenate we *can* use puts. Is either quicker?
	printf("Time taken by ItoA_Magic to display Pi (original): %d\n", Ticks);
	Ticks = 0;
	__asm
	{
								VSUB.F32 				Pi_Approx, Pi_Approx, s2  // remove the 3 from the pi approximation
								VMUL.F32 				Pi_Approx, Pi_Approx, s3  // scale to a 5 digit number
								VCVT.U32.F32 		Pi_Approx, Pi_Approx      // convert the aproximation to a natural number
								VMOV						r2, Pi_Approx	            // reuse r8 by storing the 5 digit number
								MOV 						r0, Places                // get the address of the second character array ("xxxxx")
								MOV 						r1, 4                    	// reset the loop terminator
								ADD 						r1, r0                    // r7 is now the address of the last element of the array
		MAGICFOR:		MUL 						r3, r2, 819               // bypass an integer division by multiplying the 5 digit number with the magic number: 819 (2^13/10)
								LSRS						r3, 13                    // and dividing it by 2^13 
								MLS 						r2, r3, 10, r2            // get the last digit of r8
								ADD 						r2, 48                    // convert the digit to ASCI by adding the character '0' to it, and the code for '0' is 48
								STRB 						r2, [r1], -1              // place the new character into the string and make the pointer point to the previous address
								MOV							r2, r3                    // r8 becomes the first 4/3/2/1/0 digits after the dot, of the pi approximation
								CMP 						r1, r0                    // if r7 is still pointing inside the array,
								BGE							MAGICFOR                  // loop again
	}
	puts(Pi_String);
	printf("Time taken by ItoA_Magic to display Pi: %d", Ticks);
	//************ END OF TIMED PARTS **************************************************************
	return (0);
}

void ItoA_Magic(int number, char* outString)
{
	// Note: This only works on 5 digit numbers.
	#define numDigits 5
	const int ASCII = 0x30;				// Single digits turn into ASCII characters by adding 30h to them.
	uint64_t magic = 0x66666667;	// Magic Number = 66666667 hex = 2^34 / 10
	uint64_t numDiv10;						// Each iteration this has the reducing number/10.

	// Extract digits one by one.
	for (int i = numDigits-1; i >= 0; i--)	// Stash ASCII digits in string in reverse order.
	{
		numDiv10 = (uint64_t)number * magic;		// number/10 - use Magic Number, not division!
		numDiv10 >>= 34;			// More magic... result = number/10 now.
		int digit = number - (int)(numDiv10 * 10);	// Get the single digit.
		outString[i] = (char)(digit + ASCII);		// Slot ASCII digit into char array.
		number = (int) numDiv10;			// Use the now smaller number in the next iteration.
	}
}
